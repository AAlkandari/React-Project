{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { decode } from \"jwt-decode\";\nimport api from \"./api\";\n\nclass AuthStore {\n  constructor() {\n    this.user = null;\n\n    this.setUser = token => {\n      localStorage.setItem(\"myToken\", token);\n      api.defaults.headers.common.Authorization = `Bearer ${token}`;\n      this.user = decode(token);\n    };\n\n    this.signUp = async user => {\n      try {\n        const response = await api.post(\"/signup\", user);\n        this.setUser(response.data.token);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.signIn = async user => {\n      try {\n        const response = await api.post(\"/signin\", user);\n        this.setUser(response.data.token);\n        console.log(this.user);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.signout = () => {\n      delete api.defaults.headers.common.Authorization;\n      this.user = null;\n      localStorage.removeItem(\"myToken\");\n    };\n\n    this.checkForToken = () => {\n      const token = localStorage.getItem(\"myToken\");\n\n      if (token) {\n        const currentTime = Date.now();\n        const exp = decode(token).exp;\n\n        if (exp > currentTime) {\n          this.setUser(token);\n        } else {\n          this.signout();\n        }\n      } else {\n        this.signout();\n      }\n    };\n\n    makeAutoObservable(this, {});\n  }\n\n}\n\nconst authStore = new AuthStore();\nauthStore.checkForToken();\nexport default authStore;","map":{"version":3,"sources":["/Users/isdepartment/Development/React-Project/src/stores/authStore.js"],"names":["makeAutoObservable","decode","api","AuthStore","constructor","user","setUser","token","localStorage","setItem","defaults","headers","common","Authorization","signUp","response","post","data","error","console","log","signIn","signout","removeItem","checkForToken","getItem","currentTime","Date","now","exp","authStore"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,SAAN,CAAgB;AAGZC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc,GAFP,IAEO;;AAAA,SAIdC,OAJc,GAIHC,KAAD,IAAW;AACjBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,KAAhC;AACAL,MAAAA,GAAG,CAACQ,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASN,KAAM,EAA5D;AACA,WAAKF,IAAL,GAAYJ,MAAM,CAACM,KAAD,CAAlB;AACH,KARa;;AAAA,SAUdO,MAVc,GAUL,MAAOT,IAAP,IAAgB;AACrB,UAAI;AACA,cAAMU,QAAQ,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAS,SAAT,EAAoBX,IAApB,CAAvB;AACA,aAAKC,OAAL,CAAaS,QAAQ,CAACE,IAAT,CAAcV,KAA3B;AACH,OAHD,CAIA,OAAMW,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAlBa;;AAAA,SAoBVG,MApBU,GAoBD,MAAOhB,IAAP,IAAgB;AACrB,UAAI;AACJ,cAAMU,QAAQ,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAS,SAAT,EAAoBX,IAApB,CAAvB;AACA,aAAKC,OAAL,CAAaS,QAAQ,CAACE,IAAT,CAAcV,KAA3B;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,IAAjB;AACH,OAJG,CAKA,OAAMa,KAAN,EAAa;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KA7Ba;;AAAA,SA+BbI,OA/Ba,GA+BH,MAAM;AACb,aAAOpB,GAAG,CAACQ,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAAnC;AACA,WAAKR,IAAL,GAAY,IAAZ;AACAG,MAAAA,YAAY,CAACe,UAAb,CAAwB,SAAxB;AACF,KAnCY;;AAAA,SAoCbC,aApCa,GAoCG,MAAM;AACnB,YAAMjB,KAAK,GAAGC,YAAY,CAACiB,OAAb,CAAqB,SAArB,CAAd;;AACA,UAAGlB,KAAH,EAAS;AACL,cAAMmB,WAAW,GAAGC,IAAI,CAACC,GAAL,EAApB;AACA,cAAMC,GAAG,GAAG5B,MAAM,CAACM,KAAD,CAAN,CAAcsB,GAA1B;;AACA,YAAGA,GAAG,GAAGH,WAAT,EAAqB;AACnB,eAAKpB,OAAL,CAAaC,KAAb;AACD,SAFD,MAGK;AACD,eAAKe,OAAL;AACH;AACH,OATF,MAUK;AACL,aAAKA,OAAL;AACC;AACR,KAnDiB;;AACVtB,IAAAA,kBAAkB,CAAC,IAAD,EAAO,EAAP,CAAlB;AACH;;AALW;;AAwDhB,MAAM8B,SAAS,GAAG,IAAI3B,SAAJ,EAAlB;AACA2B,SAAS,CAACN,aAAV;AACA,eAAeM,SAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { decode } from \"jwt-decode\";\nimport api from \"./api\";\n\nclass AuthStore {\n    user = null;\n    \n    constructor() {\n        makeAutoObservable(this, {})\n    }\n\n    setUser = (token) => {\n        localStorage.setItem(\"myToken\", token)\n        api.defaults.headers.common.Authorization = `Bearer ${token}`;\n        this.user = decode(token);\n    }\n\n    signUp = async (user) => {\n        try {\n            const response = await api.post(\"/signup\", user);\n            this.setUser(response.data.token);\n        }\n        catch(error) {\n            console.log(error);\n        }\n    }\n\n        signIn = async (user) => {\n            try {\n            const response = await api.post(\"/signin\", user);\n            this.setUser(response.data.token);\n            console.log(this.user);\n        }\n            catch(error) {\n            console.log(error);\n        }\n    }\n\n     signout = () => {\n        delete api.defaults.headers.common.Authorization;\n        this.user = null;\n        localStorage.removeItem(\"myToken\");\n     }\n     checkForToken = () => {\n        const token = localStorage.getItem(\"myToken\");\n        if(token){\n            const currentTime = Date.now();\n            const exp = decode(token).exp;\n            if(exp > currentTime){\n              this.setUser(token);  \n            }\n            else {\n                this.signout();\n            }\n         }\n        else {\n        this.signout();\n        }\n}  \n}\nconst authStore = new AuthStore();\nauthStore.checkForToken();\nexport default authStore;"]},"metadata":{},"sourceType":"module"}